{"meta":{"title":"XGo","subtitle":null,"description":null,"author":"XGo","url":"http://blog.xgo.pub"},"pages":[{"title":"","date":"2017-05-12T16:00:37.037Z","updated":"2017-05-12T16:00:37.037Z","comments":true,"path":"REDEME.html","permalink":"http://blog.xgo.pub/REDEME.html","excerpt":"","text":"gaoxiang104.github.io"},{"title":"categories","date":"2017-05-12T02:39:51.000Z","updated":"2017-05-12T16:00:37.037Z","comments":false,"path":"categories/index.html","permalink":"http://blog.xgo.pub/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-05-12T02:37:24.000Z","updated":"2017-05-12T16:00:37.037Z","comments":false,"path":"tags/index.html","permalink":"http://blog.xgo.pub/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"nginx学习(2)——进程和运行时控制","slug":"nginx-2-beginnerGuide","date":"2017-05-13T05:38:57.000Z","updated":"2017-05-14T16:13:08.504Z","comments":true,"path":"2017/05/13/nginx-2-beginnerGuide/","link":"","permalink":"http://blog.xgo.pub/2017/05/13/nginx-2-beginnerGuide/","excerpt":"","text":"1. 主进程和工作进程（Master and Worker Processes） NGINX has one master process and one or more worker processes. If caching is enabled, the cache loader and cache manager processes also run at startup. NGINX有一个主进程和一个或多个工作进程。如果启用缓存，缓存加载程序和缓存管理器进程也将在启动时运行。 The main purpose of the master process is to read and evaluate configuration files, as well as maintain the worker processes. 主程序的主要目的是读取和评估配置文件以及维护工作进程。 The worker processes do the actual processing of requests. NGINX relies on OS-dependent mechanisms to efficiently distribute requests among worker processes. The number of worker processes is defined in the nginx.conf configuration file and can be fixed for a given configuration or automatically adjusted to the number of available CPU cores (see worker_processes). 工作进程处理真实的请求。NGINX依赖于依赖于操作系统的机制来有效地在工作进程之间分配请求。工作进程的数量在nginx.conf配置文件中定义，并且可以针对给定的配置进行修复，或者自动调整为可用CPU内核的数量（参见 worker_processes）。 2. nginx控制首先查看nginx命令的help123456789101112131415# nginx -h nginx version: nginx/1.12.0Usage: nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]Options: -?,-h : this help -v : show version and exit -V : show version and configure options then exit -t : test configuration and exit -T : test configuration, dump it and exit -q : suppress non-error messages during configuration testing -s signal : send signal to a master process: stop, quit, reopen, reload -p prefix : set prefix path (default: /etc/nginx/) -c filename : set configuration file (default: /etc/nginx/nginx.conf) -g directives : set global directives out of configuration file 2.1. 启动nginx启动方式如下：1# nginx -c /etc/nginx/nginx.conf 备注：网上找的启动方式，看help并不明白 nginx -c 就是start 2.2. nginx -s通过nginx -s signal来控制主进程，下面是signal的详细解释： stop : 快速关闭服务 quit : 正常关闭服务,该命令应该在启动nginx的同一用户下执行。 reload : 重新加载配置文件 reopen : 重新打开日志文件 Changes made in the configuration file will not be applied until the command to reload configuration is sent to nginx or it is restarted. To reload configuration, execute: nginx重启之前，配置文件中修改的内容将不会被应用，如果需要重新加载配置文件，需要执行：1nginx -s reload Once the master process receives the signal to reload configuration, it checks the syntax validity of the new configuration file and tries to apply the configuration provided in it. If this is a success, the master process starts new worker processes and sends messages to old worker processes, requesting them to shut down. Otherwise, the master process rolls back the changes and continues to work with the old configuration. Old worker processes, receiving a command to shut down, stop accepting new connections and continue to service current requests until all such requests are serviced. After that, the old worker processes exit. 一旦主进程收到要重新加载配置的命令，它将检查新配置文件的语法有效性，并尝试应用其中提供的配置。如果这是成功的，主进程将启动新的工作进程，并向旧的工作进程发送消息，请求它们关闭。否则，主进程回滚更改，并继续使用旧配置。老工作进程，接收关闭命令，停止接受新连接，并继续维护当前请求，直到所有这些请求得到维护。之后，旧的工作进程退出。 2.3. 查看nginx进程列表获取正在运行的nginx进程列表，可以使用下面的命令：1234# ps -ax | grep nginx 9345 ? Ss 0:00 nginx: master process nginx -c /etc/nginx/nginx.conf 9358 ? S 0:00 nginx: worker process11734 pts/18 S+ 0:00 grep --color=auto nginx 可以使用kill nginx master process正常关闭nginx :1keill -s QUIT 9345 3. 配置文件结构介绍 The way nginx and its modules work is determined in the configuration file. By default, the configuration file is named nginx.conf and placed in the directory /usr/local/nginx/conf, /etc/nginx, or /usr/local/etc/nginx. 配置文件中确定nginx及其模块的工作方式。默认的配置文件是 /etc/nginx/ 目录中的 nginx.conf 文件。 4. 参考文献 nginx documentation：Beginner’s GuideRuntime control :","categories":[{"name":"nginx","slug":"nginx","permalink":"http://blog.xgo.pub/categories/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"http://blog.xgo.pub/tags/nginx/"}]},{"title":"nginx学习(1)——安装","slug":"nginx-1-install","date":"2017-05-12T08:14:25.000Z","updated":"2017-05-13T16:10:47.699Z","comments":true,"path":"2017/05/12/nginx-1-install/","link":"","permalink":"http://blog.xgo.pub/2017/05/12/nginx-1-install/","excerpt":"","text":"1. 安装计划 系统：ubuntu 16.04 LTS X86_64 安装nginx版本：nginx-1.12.0 Stable version 安装方式：使用apt安装 2. 安装2.1. 查找Ubuntu发行版的codename Version Codename Supported Platforms 12.04 precise x86_64, i386 14.04 trusty x86_64, i386, aarch64/arm64 16.04 xenial x86_64, i386, ppc64el, aarch64/arm64 16.10 yakkety x86_64, i386 2.2. 添加apt sources将以下内容追加到文件/etc/apt/sources.list末尾：12deb http://nginx.org/packages/ubuntu/ xenial nginxdeb-src http://nginx.org/packages/ubuntu/ xenial nginx 2.3. 下载并导入nginx signing keyRPM软件包和Debian / Ubuntu存储库都使用数字签名来验证下载包的完整性和起源。为了检查签名，需要下载 nginx签名密钥 并将其导入rpm或apt 程序的密钥环：1sudo apt-key add /%密钥所在文件夹%/nginx_signing.key 2.4. 执行安装12sudo apt-get updatesudo apt-get install nginx 2.5. 安装完成123456789101112131415$ nginx -hnginx version: nginx/1.12.0Usage: nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]Options: -?,-h : this help -v : show version and exit -V : show version and configure options then exit -t : test configuration and exit -T : test configuration, dump it and exit -q : suppress non-error messages during configuration testing -s signal : send signal to a master process: stop, quit, reopen, reload -p prefix : set prefix path (default: /etc/nginx/) -c filename : set configuration file (default: /etc/nginx/nginx.conf) -g directives : set global directives out of configuration file 3. 参考文档 nginx documentation：Installing nginx","categories":[{"name":"nginx","slug":"nginx","permalink":"http://blog.xgo.pub/categories/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"http://blog.xgo.pub/tags/nginx/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-05-11T08:14:25.000Z","updated":"2017-05-12T17:09:10.000Z","comments":true,"path":"2017/05/11/hello-world/","link":"","permalink":"http://blog.xgo.pub/2017/05/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}